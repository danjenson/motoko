#!/bin/sh
set -e

pp () {
  printf "\n\n$1\n"
}

build_android () {
  echo 'building for android...'
  # yi install bundletool
  # https://flutter.dev/docs/deployment/android#test-the-app-bundle
  # https://developer.android.com/studio/command-line/bundletool#generate_apks
  PLATFORMS=android-arm,android-arm64,android-x64
  BUILD_DIR=build/app/outputs/bundle/release
  BUNDLE_PATH=$BUILD_DIR/app-release.aab
  APKS_PATH=$BUILD_DIR/app-release.apks
  flutter build appbundle --release --target-platform $PLATFORMS
  bundletool build-apks --overwrite --bundle=$BUNDLE_PATH --output=$APKS_PATH
  echo 'success!'
}

build_web () {
  echo 'building for web...'
  flutter channel beta
  flutter upgrade
  flutter config --enable-web
  flutter build web
  echo 'success!'
}

install_android () {
  echo 'installing on attached android...'
  bundletool install-apks --apks=$APKS_PATH
  echo 'success!'
}

usage () {
  pp "usage: ./run [build|install|android]"
}

if [ "$1" == "-h" ]; then
  usage
elif [ "$1" == "build" ]; then
  if [ "$2" == "android" ]; then build_android
  elif [ "$2" == "web" ]; then build_web
  else pp "usage: ./run build [android|web]"
  fi
elif [ "$1" == "install" ]; then
  if [ "$2" == "android" ]; then install_android
  else pp "usage: ./run install [android]"
  fi
elif [ "$1" == "android" ]; then
  build_android
  install_android
else
  usage
fi
