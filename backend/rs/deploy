#!/bin/bash
set -e

# NOTE: this is not safe for parallel execution
BINARY="${1:-graphql}"
TIER="${2:-dev}"
FUNCTION_NAME=motoko-$BINARY-$TIER
BINARY_DIR=./target/x86_64-unknown-linux-musl/release
BINARY_PATH=$BINARY_DIR/$BINARY
BINARY_BOOTSTRAP_PATH=$BINARY_DIR/bootstrap
BINARY_BOOTSTRAP_PATH_ZIP=$BINARY_BOOTSTRAP_PATH.zip

pp () {
  printf "\n\n$1\n"
}

setup () {
  pp 'installing rust musl...'
  rustup target add x86_64-unknown-linux-musl
  pp 'installing aws cli...'
  if ! command -v aws &> /dev/null
  then
    cd /tmp
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install
    cd -
    pp 'Users > <user> > Security Keys:\nhttps://console.aws.amazon.com/iam/home#/users'
    pp 'Regions: https://docs.aws.amazon.com/general/latest/gr/rande.html'
    pp 'us-west-1 is Northern California'
    pp 'json is a good default output format'
    aws configure
  fi
  pp 'setup complete!'
}

build () {
  pp 'building and bundling lambda functions...'
  setup
  cargo test
  cargo build --release --target x86_64-unknown-linux-musl
  # https://github.com/awslabs/aws-lambda-rust-runtime 
  cp $BINARY_PATH $BINARY_BOOTSTRAP_PATH
  zip -j $BINARY_BOOTSTRAP_PATH_ZIP $BINARY_BOOTSTRAP_PATH
  pp "bundled to $BINARY_BOOTSTRAP_PATH_ZIP"
}

deploy () {
  build
  pp 'deploying to aws...'
  # https://github.com/awslabs/aws-lambda-rust-runtime 
  aws lambda get-function --function-name $FUNCTION_NAME > /dev/null 2>&1 &&
    aws lambda update-function-code \
      --function-name $FUNCTION_NAME \
      --zip-file fileb://$BINARY_BOOTSTRAP_PATH_ZIP \
    ||
    aws lambda create-function \
      --function-name $FUNCTION_NAME \
      --handler doesnt.matter \
      --zip-file fileb://$BINARY_BOOTSTRAP_PATH_ZIP \
      --runtime provided \
      --role arn:aws:iam::902096072945:role/motoko-lambda \
      --environment Variables={RUST_BACKTRACE=1} \
      --tracing-config Mode=Active
  pp "deployed $FUNCTION_NAME"
}

if [ "$1" == "-h" ]; then
  pp "usage: ./deploy [bin] [dev|prod]\n"
else
  deploy
fi
