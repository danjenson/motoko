# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import types_pb2 as types__pb2


class TachikomaStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Infer = channel.stream_unary(
        '/pb.Tachikoma/Infer',
        request_serializer=types__pb2.InferRequest.SerializeToString,
        response_deserializer=types__pb2.InferResponse.FromString,
        )
    self.Learn = channel.stream_unary(
        '/pb.Tachikoma/Learn',
        request_serializer=types__pb2.LearnRequest.SerializeToString,
        response_deserializer=types__pb2.LearnResponse.FromString,
        )
    self.Predict = channel.stream_stream(
        '/pb.Tachikoma/Predict',
        request_serializer=types__pb2.PredictRequest.SerializeToString,
        response_deserializer=types__pb2.PredictResponse.FromString,
        )


class TachikomaServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Infer(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Learn(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Predict(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TachikomaServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Infer': grpc.stream_unary_rpc_method_handler(
          servicer.Infer,
          request_deserializer=types__pb2.InferRequest.FromString,
          response_serializer=types__pb2.InferResponse.SerializeToString,
      ),
      'Learn': grpc.stream_unary_rpc_method_handler(
          servicer.Learn,
          request_deserializer=types__pb2.LearnRequest.FromString,
          response_serializer=types__pb2.LearnResponse.SerializeToString,
      ),
      'Predict': grpc.stream_stream_rpc_method_handler(
          servicer.Predict,
          request_deserializer=types__pb2.PredictRequest.FromString,
          response_serializer=types__pb2.PredictResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.Tachikoma', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
