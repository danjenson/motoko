// Code generated by protoc-gen-go. DO NOT EDIT.
// source: enums.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BehaviorType int32

const (
	BehaviorType_CONTINUOUS  BehaviorType = 0
	BehaviorType_CATEGORICAL BehaviorType = 1
	BehaviorType_TEXT        BehaviorType = 2
)

var BehaviorType_name = map[int32]string{
	0: "CONTINUOUS",
	1: "CATEGORICAL",
	2: "TEXT",
}

var BehaviorType_value = map[string]int32{
	"CONTINUOUS":  0,
	"CATEGORICAL": 1,
	"TEXT":        2,
}

func (x BehaviorType) String() string {
	return proto.EnumName(BehaviorType_name, int32(x))
}

func (BehaviorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{0}
}

type DataType int32

const (
	DataType_BOOLEAN DataType = 0
	DataType_FLOAT   DataType = 1
	DataType_INTEGER DataType = 2
	DataType_STRING  DataType = 3
)

var DataType_name = map[int32]string{
	0: "BOOLEAN",
	1: "FLOAT",
	2: "INTEGER",
	3: "STRING",
}

var DataType_value = map[string]int32{
	"BOOLEAN": 0,
	"FLOAT":   1,
	"INTEGER": 2,
	"STRING":  3,
}

func (x DataType) String() string {
	return proto.EnumName(DataType_name, int32(x))
}

func (DataType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{1}
}

type FunctionType int32

const (
	FunctionType_MEAN   FunctionType = 0
	FunctionType_MEDIAN FunctionType = 1
	FunctionType_MODE   FunctionType = 2
)

var FunctionType_name = map[int32]string{
	0: "MEAN",
	1: "MEDIAN",
	2: "MODE",
}

var FunctionType_value = map[string]int32{
	"MEAN":   0,
	"MEDIAN": 1,
	"MODE":   2,
}

func (x FunctionType) String() string {
	return proto.EnumName(FunctionType_name, int32(x))
}

func (FunctionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{2}
}

type KeyType int32

const (
	KeyType_LEARN       KeyType = 0
	KeyType_TRANSFORMER KeyType = 1
	KeyType_ESTIMATOR   KeyType = 2
	KeyType_EVALUATION  KeyType = 3
)

var KeyType_name = map[int32]string{
	0: "LEARN",
	1: "TRANSFORMER",
	2: "ESTIMATOR",
	3: "EVALUATION",
}

var KeyType_value = map[string]int32{
	"LEARN":       0,
	"TRANSFORMER": 1,
	"ESTIMATOR":   2,
	"EVALUATION":  3,
}

func (x KeyType) String() string {
	return proto.EnumName(KeyType_name, int32(x))
}

func (KeyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{3}
}

type ServiceType int32

const (
	ServiceType_SERVICE_LEARN   ServiceType = 0
	ServiceType_SERVICE_PREDICT ServiceType = 1
)

var ServiceType_name = map[int32]string{
	0: "SERVICE_LEARN",
	1: "SERVICE_PREDICT",
}

var ServiceType_value = map[string]int32{
	"SERVICE_LEARN":   0,
	"SERVICE_PREDICT": 1,
}

func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}

func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{4}
}

type TaskType int32

const (
	TaskType_CLASSIFY TaskType = 0
	TaskType_REGRESS  TaskType = 1
	TaskType_CLUSTER  TaskType = 2
)

var TaskType_name = map[int32]string{
	0: "CLASSIFY",
	1: "REGRESS",
	2: "CLUSTER",
}

var TaskType_value = map[string]int32{
	"CLASSIFY": 0,
	"REGRESS":  1,
	"CLUSTER":  2,
}

func (x TaskType) String() string {
	return proto.EnumName(TaskType_name, int32(x))
}

func (TaskType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_888b6bd9597961ff, []int{5}
}

func init() {
	proto.RegisterEnum("pb.BehaviorType", BehaviorType_name, BehaviorType_value)
	proto.RegisterEnum("pb.DataType", DataType_name, DataType_value)
	proto.RegisterEnum("pb.FunctionType", FunctionType_name, FunctionType_value)
	proto.RegisterEnum("pb.KeyType", KeyType_name, KeyType_value)
	proto.RegisterEnum("pb.ServiceType", ServiceType_name, ServiceType_value)
	proto.RegisterEnum("pb.TaskType", TaskType_name, TaskType_value)
}

func init() { proto.RegisterFile("enums.proto", fileDescriptor_888b6bd9597961ff) }

var fileDescriptor_888b6bd9597961ff = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xcb, 0x6a, 0xc3, 0x30,
	0x10, 0x45, 0x63, 0xe7, 0xe5, 0x8c, 0xf3, 0x50, 0xdd, 0xbf, 0xf0, 0x22, 0x8b, 0x96, 0x2e, 0x4a,
	0x57, 0x8a, 0x3c, 0x36, 0xa2, 0xb2, 0x54, 0xa4, 0x71, 0x68, 0x57, 0xc5, 0x09, 0x86, 0x86, 0xd2,
	0x38, 0xe4, 0x05, 0xf9, 0xfb, 0x62, 0x9b, 0x6c, 0x2f, 0xba, 0xe7, 0xea, 0x0c, 0x84, 0xd5, 0xfe,
	0xf2, 0x77, 0x5a, 0x1e, 0x8e, 0xf5, 0xb9, 0x8e, 0xfc, 0xc3, 0x26, 0x7e, 0x85, 0xe9, 0xaa, 0xfa,
	0x29, 0xaf, 0xbb, 0xfa, 0x48, 0xb7, 0x43, 0x15, 0xcd, 0x01, 0x84, 0xd1, 0x24, 0x75, 0x61, 0x0a,
	0xc7, 0x7a, 0xd1, 0x02, 0x42, 0xc1, 0x09, 0x33, 0x63, 0xa5, 0xe0, 0x8a, 0x79, 0x51, 0x00, 0x03,
	0xc2, 0x4f, 0x62, 0x7e, 0xfc, 0x06, 0x41, 0x52, 0x9e, 0xcb, 0xb6, 0x16, 0xc2, 0x78, 0x65, 0x8c,
	0x42, 0xae, 0x59, 0x2f, 0x9a, 0xc0, 0x30, 0x55, 0x86, 0x13, 0xf3, 0x9a, 0x5c, 0x6a, 0xc2, 0x0c,
	0x2d, 0xf3, 0x23, 0x80, 0x91, 0x23, 0x2b, 0x75, 0xc6, 0xfa, 0xf1, 0x12, 0xa6, 0xe9, 0x65, 0xbf,
	0x3d, 0xef, 0xea, 0x7d, 0x0b, 0x08, 0x60, 0x90, 0x77, 0x6d, 0x80, 0x51, 0x8e, 0x89, 0xe4, 0xba,
	0x1b, 0xcb, 0x4d, 0x82, 0xcc, 0x8f, 0x13, 0x18, 0xbf, 0x57, 0xb7, 0xf6, 0xe9, 0x04, 0x86, 0x0a,
	0xb9, 0xd5, 0xdd, 0xef, 0xc8, 0x72, 0xed, 0x52, 0x63, 0x73, 0xb4, 0xcc, 0x8b, 0x66, 0x30, 0x41,
	0x47, 0x32, 0xe7, 0x64, 0x9a, 0xc5, 0x39, 0x00, 0xae, 0xb9, 0x2a, 0x38, 0x49, 0xa3, 0x59, 0x3f,
	0x7e, 0x81, 0xd0, 0x55, 0xc7, 0xeb, 0x6e, 0x5b, 0xb5, 0xa4, 0x07, 0x98, 0x39, 0xb4, 0x6b, 0x29,
	0xf0, 0xfb, 0x4e, 0x7c, 0x84, 0xc5, 0x3d, 0xfa, 0xb0, 0x98, 0x48, 0x41, 0xcc, 0x8b, 0x9f, 0x20,
	0xa0, 0xf2, 0xf4, 0xdb, 0x76, 0xa6, 0x10, 0x08, 0xc5, 0x9d, 0x93, 0xe9, 0x17, 0xeb, 0x35, 0x7e,
	0x16, 0x33, 0x8b, 0xce, 0x75, 0xb2, 0x42, 0x15, 0x8e, 0x1a, 0xd9, 0xcd, 0xa8, 0xbd, 0xf1, 0xf3,
	0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x29, 0x2b, 0x0a, 0x5d, 0x72, 0x01, 0x00, 0x00,
}
